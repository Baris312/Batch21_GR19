




Interface (not a class): blue print of class
                         specifies the behaviors or actions that class need to implement
                         meant to be implemented (cannot be final)
                         cannot have object (not a class)
     What we can have:
        variables: public static and final by default
        methods: abstract method
                static methods
                default method
    what we cannot have:
        constructor
        instance methods
        instance variables
        blocks




    what we need interface:
        A class can extend one class
        A class implement multiple interfaces
**********  Abstract class                 VS           *******Interface:

1- a class can only extend one abstract class                 1- a class can implement multiple interfaces
2-  everything a regular class can + abstract method            2-  variable: public static and final
                                                                         > methods: abstract method
                                                                            >  static methods
                                                                              > default method




 Abstract and   interface:
                             both used for achieving abstraction
                             both meant to be inherited ( extends, implements)
                             both cannot be final
                             both cannot create objects